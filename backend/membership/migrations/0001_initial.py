# Generated by Django 3.2.5 on 2022-09-23 14:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middlename', models.CharField(max_length=50, verbose_name='Middle Name')),
                ('mctnumber', models.CharField(blank=True, max_length=50, null=True, verbose_name='MCT Number')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=8, verbose_name='Gender')),
                ('phone_number', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('region', models.CharField(choices=[('Arusha', 'Arusha'), ('Dar es Salaam', 'Dar es Salaam'), ('Dodoma', 'Dodoma'), ('Geita', 'Geita'), ('Iringa', 'Iringa'), ('Kagera', 'Kagera'), ('Katavi', 'Katavi'), ('Kigoma', 'Kigoma'), ('Kilimanjaro', 'Kilimanjaro'), ('Lindi', 'Lindi'), ('Manyara', 'Manyara'), ('Mara', 'Mara'), ('Mbeya', 'Mbeya'), ('Mjini Magharibi', 'Mjini Magharibi'), ('Morogoro', 'Morogoro'), ('Mtwara', 'Mtwara'), ('Mwanza', 'Mwanza'), ('Njombe', 'Njombe'), ('Pemba North', 'Pemba North'), ('Pemba South', 'Pemba South'), ('Pwani', 'Pwani'), ('Rukwa', 'Rukwa'), ('Ruvuma', 'Ruvuma'), ('Shinyanga', 'Shinyanga'), ('Simiyu', 'Simiyu'), ('Singida', 'Singida'), ('Songwe', 'Songwe'), ('Tabora', 'Tabora'), ('Tanga', 'Tanga'), ('Unguja North', 'Unguja North'), ('Unguja South', 'Unguja South')], max_length=50, verbose_name='Region')),
                ('organization', models.CharField(max_length=180, verbose_name='Your Organization')),
                ('profession', models.CharField(choices=[('Administrator', 'Administrator'), ('Community health worker', 'ommunity health worker'), ('First responder such as EMT or Paramedic', 'First responder such as EMT or Paramedic'), ('Medical doctor', 'Medical doctor'), ('Mental health provider such as counselor, psychologist, social worker', 'Mental health provider such as counselor, psychologist, social worker'), ('Nurse or practitioner or physician assistant', 'Nurse or practitioner or physician assistant'), ('Pharmacist', 'Pharmacist'), ('Paediatrician', 'Paediatrician'), ('Public health official', 'Public health official'), ('Testing or laboratory personnel', 'Testing or laboratory personnel'), ('Teacher/educator', 'Teacher/educator'), ('Researcher', 'Researcher'), ('Student', 'Student'), ('Other', 'Other')], max_length=180, verbose_name='Your Profession')),
                ('areaofwork', models.CharField(choices=[('Work', 'Work'), ('Hospital', 'Hospital'), ('Community healthcare', 'Community healthcare'), ('Nursing/care facility', 'Nursing/care facility'), ('Non-governmental organization', 'Non-governmental organization'), ('School/university', 'School/university'), ('Government', 'Government'), ('Others', 'Others')], max_length=180, verbose_name='Area of work')),
                ('typeofmember', models.CharField(choices=[('Associate Member', 'Associate Member'), ('Ordinary Member', 'Ordinary Member')], max_length=180, verbose_name='Membership type')),
                ('memberId', models.SlugField(editable=False, unique=True, verbose_name='Membership Identification')),
                ('avatar', django_resized.forms.ResizedImageField(crop=['middle', 'center'], default='default.jpg', force_format=None, keep_meta=True, quality=-1, scale=None, size=[300, 300], upload_to='profile/images/%Y/%m/%d', verbose_name='Profile Image')),
                ('collage', models.CharField(blank=True, max_length=180, null=True, verbose_name='Collage that you had your masters')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='Year that you graduated')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('membership_type', models.CharField(choices=[('Associate Plan', 'Associate Plan'), ('Ordinary Plan', 'Ordinary Plan')], default='Associate Plan', max_length=30)),
                ('price', models.IntegerField(default=15)),
                ('planId', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='UserMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='membership.membership')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(default=15)),
                ('created', models.DateTimeField(verbose_name='Paid at')),
                ('expire', models.DateTimeField(verbose_name='Paid at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
    ]
